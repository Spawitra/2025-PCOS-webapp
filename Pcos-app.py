import streamlit as st 
import joblib
import numpy as np
import os
from PIL import Image

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
model = joblib.load("PcosApp.joblib")

def load_image(path):
    if os.path.exists(path):
        return Image.open(path)
    else:
        st.warning(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û: {path}")
        return None

HairG = load_image("hairgrowP.jpg")
Skindarken = load_image("skin darkenP.jpg")

# ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ
features = [
    'Age (yrs)', 'Weight (Kg)', 'Cycle(R/I)', 'Cycle length(days)',
    'hair growth(Y/N)', 'Skin darkening (Y/N)', 'Pimples(Y/N)',
    'Fast food (Y/N)', 'Follicle No. (L)', 'Follicle No. (R)', 'Weight gain(Y/N)'
]

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
def preprocess_input(values):
    processed = []
    for f, v in zip(features, values):
        if isinstance(v, str):
            v = v.strip().upper()
            if v in ["Y", "YES", "1"]: 
                processed.append(1)
            elif v in ["N", "NO", "0"]: 
                processed.append(0)
            elif v in ["R"]: 
                processed.append(0)
            elif v in ["I"]: 
                processed.append(1)
            else:
                try:
                    processed.append(float(v))
                except:
                    processed.append(0)
        else:
            processed.append(v)
    return np.array(processed).reshape(1, -1)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
def predict_risk(age, weight, cycle_ri, cycle_length, hair_growth, skin_dark, pimples,
                 fast_food, foll_l, foll_r, weight_gain):
    values = [age, weight, cycle_ri, cycle_length, hair_growth, skin_dark, pimples,
              fast_food, foll_l, foll_r, weight_gain]
    X = preprocess_input(values)
    prob = model.predict_proba(X)[0][1] * 100
    if prob < 33:
        risk = "‡∏ï‡πà‡∏≥"
    elif prob < 66:
        risk = "‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á"
    else:
        risk = "‡∏™‡∏π‡∏á"
    return risk, prob

# ================= Streamlit UI =================
st.title("üß¨ PCOS Risk Self-Assessment")
st.write("‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢‡∏à‡∏≤‡∏Å‡πÅ‡∏û‡∏ó‡∏¢‡πå)")

st.error(
    """‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
    ‚ùå ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢‡∏à‡∏≤‡∏Å‡πÅ‡∏û‡∏ó‡∏¢‡πå

    ‡∏´‡∏≤‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏û‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á ‡∏Ñ‡∏ß‡∏£‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç  
    ‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏ú‡∏ô‡∏Å‡∏ô‡∏£‡∏µ‡πÄ‡∏ß‡∏ä ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏π‡∏ï‡∏¥-‡∏ô‡∏£‡∏µ‡πÄ‡∏ß‡∏ä ‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡πÉ‡∏Å‡∏•‡πâ‡∏ö‡πâ‡∏≤‡∏ô  

    üëâ ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:  
    [‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å Bangkok Hospital](https://www.bangkokhospital.com/content/overweight-women-are-more-likely-to-face-polycystic-ovary-syndrome)
    """
)

col1, col2 , col3= st.columns(3)

with col1:
    age = st.number_input("Age (yrs) ‡∏≠‡∏≤‡∏¢‡∏∏ ", min_value=10, max_value=60, value=25)
    weight = st.number_input("Weight (Kg) ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å ", min_value=30, max_value=200, value=60)
    cycle_ri = st.radio("Cycle ‡∏£‡∏≠‡∏ö‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏°‡∏≤‡∏Å‡∏µ‡πà‡∏ß‡∏±‡∏ô  (R ‡∏õ‡∏Å‡∏ï‡∏¥ /I‡πÑ‡∏°‡πà‡∏õ‡∏Å‡∏ï‡∏¥ )", ["R", "I"])
    cycle_length = st.number_input("Cycle length (days) ‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏ö ", min_value=15, max_value=60, value=28)
with col2:  
    st.write("‡πÇ‡∏õ‡∏£‡∏î‡∏™‡∏±‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô ")
    hair_growth = st.radio("Hair growth ‡∏°‡∏µ‡∏ï‡∏≤‡∏°‡∏à‡∏∏‡∏î‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏Ç‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà", ["Y", "N"]) 
    if HairG:
        st.image(HairG, caption="Ferriman Hair Growth Chart", use_container_width=True)
    skin_dark = st.radio("Skin darkening ‡∏™‡∏µ‡∏ú‡∏¥‡∏ß‡∏ï‡∏≤‡∏°‡∏à‡∏∏‡∏î‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡∏∂‡πâ‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ", ["Y", "N"])
    if Skindarken:
        st.image(Skindarken, caption="‡∏à‡∏∏‡∏î‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡∏ú‡∏¥‡∏ß‡∏Ñ‡∏•‡πâ‡∏≥", use_container_width=True)

with col3:
    pimples = st.radio("Pimples ‡∏°‡∏µ‡∏™‡∏¥‡∏ß‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ", ["Y", "N"])
    fast_food = st.radio("Fast food ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÑ‡∏Ç‡∏°‡∏±‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ", ["Y", "N"])
    foll_l = st.radio("‡∏£‡∏π‡∏Ç‡∏∏‡∏°‡∏Ç‡∏ô‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤ ‡∏ã‡πâ‡∏≤‡∏¢ ‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà  ", ["Y", "N"])
    foll_r = st.radio("‡∏£‡∏π‡∏Ç‡∏∏‡∏°‡∏Ç‡∏ô‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤ ‡∏Ç‡∏ß‡∏≤ ", ["Y", "N"])
    weight_gain = st.radio("Weight gain ‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà  ", ["Y", "N"])


if st.button("üîç ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á"):
    risk, prob = predict_risk(age, weight, cycle_ri, cycle_length, hair_growth, skin_dark,
                              pimples, fast_food, foll_l, foll_r, weight_gain)
    st.success(f"‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á: {risk} ({prob:.2f}%)")

# Section ‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏ó‡πâ‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤
with st.expander("üìù ‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå"):
    st.write("‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ñ‡πà‡∏∞ üôè")
    st.markdown("[üëâ ‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°](https://forms.gle/u7GK9hvWkpWjJjaD9)")







